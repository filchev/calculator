<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * BaseTaxRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BaseTaxRepository extends EntityRepository
{

    public function getBaseTaxes($array)
    {

        $subQuery = $this->_em->createQueryBuilder()
                ->addSelect('COUNT(tbt)')
                ->from('AppBundle:TaxBaseTax', 'tbt')
                ->andWhere('tbt.baseTax=baseTax.id')
                ->getDQL()
        ;

        $qb = $this->_em->createQueryBuilder();
        $qb->select('baseTax, COUNT(baseTax) as results')
                ->from('AppBundle:BaseTax', 'baseTax')
//                ->addSelect('COUNT(baseTax) as results')
                ->addSelect("($subQuery) as baseTaxesCount")
//                ->join('AppBundle:TaxBaseTax', 'taxBaseTax')
                ->join('AppBundle:TaxBaseTax', 'taxBaseTax', 'WITH', 'taxBaseTax.baseTax = baseTax.id')
                ->andWhere('taxBaseTax.tax IN (:formData)')
                ->groupBy('baseTax.id')
                ->having('results=baseTaxesCount')
                ->setParameter("formData", array_values($array))
                ->addOrderBy('results', 'DESC')
        ;

        $query = $qb->getQuery();
        $results = [];
      
        foreach ($query->getResult() as $result) {
            if (is_object($result[0])) {
                $results[] = $result[0];
            }
        }
        return $results;
    }

}
